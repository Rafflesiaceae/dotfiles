#!/bin/bash
set -eo pipefail
die() {
    printf '%b\n' "$1" >&2
    exit "${2-1}"
}
usage() {
    echo "usage: [-r|--remote] [-np|--no-prompt] <sh-command>"
    exit "${1-0}"
}
prompt_continue() {
    tput sc
    while true; do
        read -p "Continue? (y/n/s) â†’ " -n 1 -r yn
        case $yn in
            [Yy]*) break;;
            [Ss]*) printf "skip"; break;;
            [Nn]*) printf "\n"; exit 1;;
            *) tput el1; tput rc ;;
        esac
    done
    printf "\n"
}

remote=origin
no_prompt=
while :; do
    case $1 in
        -h|-\?|--help)
            usage 0 ;;
        -r|--remote)
            [[ ! "$2" ]] && die "ERROR: '$1' requires a non-empty option argument."
            remote=$2
            shift || usage
            ;;
        -np|--no-prompt)
            no_prompt=$1
            ;;
        --)
            shift || usage
            break
            ;;
        -?*) printf 'WARN: Unknown option (ignored): %s\n' "$1" >&2 ;;
        *) break ;;
    esac

    shift || usage
done

[[ $# -lt 1 ]] && { echo "pass a command!" >&2; usage; }
cmd=$1
shift || usage

get_remote_url() { git remote get-url "$remote"; }
git ls-remote --heads -- "$(get_remote_url)" | awk '{ print $2; }' | while read -r line; do
    line=${line#refs/heads/}
    echo "$line"

    [[ ! $no_prompt ]] && { 
        prompt_res=$(prompt_continue </dev/tty)
        if [[ "$prompt_res" == *"skip"* ]]; then
            echo "kipping"
            continue
        else
            echo ""
        fi
    }

    export branch="$line"
    eval "$cmd" < /dev/tty
done
