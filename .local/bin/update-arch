#!/usr/bin/env bash
# shellcheck disable=SC1083

set -eo pipefail

echo {{{1 run this script in tmux
if [[ "$1" != "--run" ]]; then
    if tmux has-session -t "update-arch" 2>/dev/null; then
        tmux attach-session -t "update-arch"
        exit 0
    fi

    tmux new-session -d -s "update-arch" "$0" "--run" "$@"
    tmux attach-session -t "update-arch"

    # find latest .cast file
    unset -v latest_cast_file
    for file in "${HOME}/.update_arch_"*".cast"; do
        if [[ -z "$latest_cast_file" ]] || [[ "$file" -nt "$latest_cast_file" ]]; then
            latest_cast_file=$file
        fi
    done

    # cat it
    asciinema cat "$latest_cast_file"

    exit 0
fi
shift

echo {{{1 record itself
if [[ "$1" != "--no-record" ]]; then
    title=".update_arch_$(date +%s)"
    echo "recording output to ${HOME}/${title}.cast"
    asciinema rec \
        --command "\"$0\" --run --no-record" \
        --title "$title" \
        --quiet \
        "${HOME}/${title}.cast"
    exit 0
fi

echo {{{1 update archlinux-keyring
sudo pacman -Sy --noconfirm
sudo pacman -S archlinux-keyring --noconfirm

echo {{{1 update official packages
sudo pacman -Syu --noconfirm

echo {{{1 update yay
aurloc="${HOME}/.aur"
mkdir -p "$aurloc"
mkdir -p "${aurloc}/yay"
pushd "${aurloc}/yay"
wget "https://aur.archlinux.org/cgit/aur.git/snapshot/yay.tar.gz"
tar xvfz "yay.tar.gz" -C ../
makepkg -i --noconfirm --needed --skippgpcheck
popd

echo {{{1 update some AUR packages
yay -S --answerdiff "None" --answerclean "None" --noprovides \
    aur/deadbeef

echo {{{1 update amr
amrloc="${HOME}/.amr"
[[ ! -d "$amrloc" ]] && git clone "https://github.com/Rafflesiaceae/pkgbuilds.git" "$amrloc"
pushd "$amrloc"
git pull

makepkg-and-install() {
    pushd "$1"
    if [[ "$2" == "force" ]]; then
        makepkg -i --noconfirm --force
    else
        makepkg -i --noconfirm --needed
    fi
    popd
}

makepkg-and-install "rxvt-unicode-patched"  "force" # needs recompilation when perl updates
makepkg-and-install "xkeyboard-config-desc"

popd

echo {{{1 update grub
update-grub

echo {{{1 update vim plugins
nvim +'PlugUpdate --sync' +qa

echo {{{1 update YCM
pushd "${HOME}/.vim/plugged/YouCompleteMe"
./install.py \
    --clangd-completer \
    --go-completer \
    --rust-completer \
    --ts-completer
npm i --global vscode-json-languageserver # json
GO111MODULE=on go install golang.org/x/tools/gopls@latest # golang
popd

echo {{{1 System Checks
check-system || true

echo "CONSIDER RESTARTING!"
