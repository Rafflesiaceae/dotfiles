#!/bin/bash
# @XXX tried `urxvtc` here but it returns right away and there's no argument for it to keep open until the terminal closes, see http://lists.schmorp.de/pipermail/rxvt-unicode/2009q4/001126.html
# @XXX 8>&1 indefinitely blocks a bunch of applications
# @TODO pass an identifier and ensure only one instance of the identifier can run at a time

die() {
    printf '%s\n' "$1" >&2
    exit 1
}
usage() {
    echo "usage: termpopup [-cd|--change-dir <path>] [-nc|--no-close] [-ne|--no-escape] [-nf|--no-float] [-ns|--no-shell] [-nw|--no-wait] [-w|--wait] [--] ..."
    exit 1
}
usage_and_die() {
    printf '%s\n' "$1" >&2
    usage
}

cd=
no_close=
no_escape=
no_float=
no_shell=
wait=1
while :; do
    case $1 in
        -h|-\?|--help)   usage; exit;;
        -cd|--change-dir)  
            cd=$2
            [[ -d "$cd" ]] || usage_and_die "--change-dir path is not a directory: '$cd'"
            shift || usage_and_die "--change-dir expects a path argument"
            ;;
        -nc|--no-close)  no_close=1;;
        -ne|--no-escape) no_escape=1;;
        -nf|--no-float)  no_escape=1; no_float=1;;
        -ns|--no-shell)  no_shell=1;;
        -nw|--no-wait)   wait=;;
        -w|--wait)       wait=1;;
        --)
            shift
            break
            ;;
        -?*) 
            die "Unknown option: $1"
            break
            ;;
        *) break ;;
    esac

    shift
done

args=()
if [[ $cd ]]; then
    args+=(-cd "$cd")
fi

# keeps the window open even if program exits
if [[ $no_close ]]; then
    args+=(-hold)
fi

if [[ ! $no_escape ]]; then
    args+=(-keysym.Escape "eval: exit")
fi

if [[ ! $no_float ]]; then
    args+=(-title "floating")
fi

if [[ ! $no_shell ]]; then
    args+=(-e "$SHELL" \
        -i \
        -c "$*")
else
    args+=(-e "$*")
fi

if [[ $wait ]]; then
    urxvt "${args[@]}"
else
    nohup urxvt "${args[@]}" &>/dev/null &
fi
