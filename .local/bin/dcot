#!/bin/bash
# runs a shell in the first docker-container/service via docker-compose
set -eo pipefail

die() {
    printf '%b\n' "$1" >&2
    exit "${2-1}"
}
find_docker_compose() {
    while [[ $PWD != '/' ]]; do
        result=$PWD/docker-compose.yml
        if [[ -f "$result" ]]; then
            echo "$result"
            return 0
        fi
        cd ..
    done
    die "could not find docker-compose.yml file"
}

docker_compose_file=$(find_docker_compose)

readarray services < <(yq '.services | to_entries | .[].key' -r < "$docker_compose_file")

# if there's multiple services, prompt interactively
if [[ ${#services[@]} -gt 1 ]]; then
    # service=$(printf "%s" "${services[@]}" | rofi -dmenu -window-title docker-compose-service)
    service=$(printf "%s" "${services[@]}" | fzf --prompt=service --height=5)
else
    service=${services[0]}
fi
service=$(printf "%b" "$service")

shell=${1:-bash}
service=${2:-$service}
docker-compose exec "$service" "$shell" || die "could not exec $shell in $service"
