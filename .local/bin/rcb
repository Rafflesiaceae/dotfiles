#!/usr/bin/env bash
die() {
    printf '%s\n' "$1" >&2
    exit "${2-1}"
}

usage() {
    echo "usage: rcb [-a|--append] [-e|--edit] [-i|--in] [-o|--out] [-s|--str <str>] [-t|--tee]"
    exit 1
}

usage_and_die() {
    printf '%s\n' "$1" >&2
    usage
}

cli_append=
cli_edit=
cli_in=
cli_out=
cli_str=
cli_tee=
while :; do
    case $1 in
        -h|-\?|--help)
            usage ;;
        -a|--append)
            cli_append=1
            ;;
        -e|--edit)
            cli_edit=1
            ;;
        -i|--in)
            cli_in=1
            ;;
        -o|--out)
            cli_out=1
            ;;
        -s|--str)
            cli_str=1
            ;;
        -t|--tee)
            cli_tee=1
            ;;
        --)
            shift
            break
            ;;
        -?*) printf 'WARN: Unknown option (ignored): %s\n' "$1" >&2 ;;
        *) break ;;
    esac

    shift
done

remote_host=
# shellcheck disable=SC1091
source "${HOME}/.config/rcb.sh"

_remote_in() { ssh "${remote_host}" "cat > \$HOME/.cp"; }

clip_out() { ssh "${remote_host}" "cat \$HOME/.cp"; }
clip_in() {
    if [[ $cli_append ]]; then
        inp=$(cat -)
        printf "%s%s" "$(clip_out)" "$inp" | _remote_in
    elif [[ $cli_tee ]]; then
         stdin=$(cat)
         echo "$stdin"
         printf "%s" "$stdin" | _remote_in
    else
        cat - | _remote_in
    fi
}

if [[ $cli_edit ]]; then
    tmpfile=$(mktemp)
    cleanup_tmpfile() {
        rm -f "$tmpfile"
    }
    trap 'cleanup_tmpfile' EXIT INT
    clip_out > "$tmpfile"
    "$EDITOR" "$tmpfile"
    sed -z '$ s/\n$//' < "$tmpfile" | clip_in
elif [[ $cli_out ]]; then
    clip_out
elif  [[ $cli_in ]]; then
    clip_in
elif  [[ $cli_str ]]; then
    printf "%s" "$1" | clip_in
elif  [[ -f $1 ]]; then
    cb < "$1"
else
    if [[ -t 0 ]]; then
        clip_out
    else
        clip_in
    fi
fi
