#!/bin/bash
set -eo pipefail
die() {
    printf '%b\n' "$1" >&2
    exit "${2-1}"
}
usage() {
    echo "usage: [-h|--help] [--] <cmd>+"
    exit "${1-0}"
}

cleanups=""
cleanup() { eval "$cleanups"; }
trap 'cleanup' EXIT

if [[ -n "$CONDA_DEFAULT_ENV" ]]; then
    deac=$(micromamba shell --shell bash deactivate)
    eval "$deac"
    exit 0
fi

mmbenv=$1
shift || die "pass an env, known envs:\n$(ls "$MAMBA_ROOT_PREFIX"/envs | sed 's/^/\t/')"

force=
case $mmbenv in
    --force|-f)
        force=1
        mmbenv=$1
        shift || die "pass an env, known envs:\n$(ls "$MAMBA_ROOT_PREFIX"/envs | sed 's/^/\t/')"
        ;;
esac

while :; do
    case $1 in
        -h|-\?|--help)
            usage; exit ;;
        --)
            shift || usage
            break
            ;;
        -?*) printf 'WARN: Unknown option (ignored): %s\n' "$1" >&2 ;;
        *) break ;;
    esac

    shift || usage
done

# if it's a file, so we consider it a conda-lock scenario
pass_no_args=
if [[ -e "$mmbenv" ]]; then 
    name=$(yq -r '.name' < "$mmbenv")
    echo "! env: $name" >&2
    if file-changed "$mmbenv" || [[ "$force" ]]; then
        echo "! $mmbenv changed, rebuilding..." >&2
        cleanups="file-changed -r \"$mmbenv\""

        lockfile="lock-$name.yml"
        envpath=$MAMBA_ROOT_PREFIX/envs/$name

        # for now we don't reuse any previous lockfile or environment by default
        # so we actually remove all previous traces on a change
        # @XXX if there's a name collision with some other env it will be
        # removed completely and replaced
        (
        if [[ -e "$lockfile" ]]; then
            echo "! rm $lockfile" >&2
            rm "$lockfile"
        fi
        if [[ -d "$envpath" ]]; then
            echo "! rm -rf $envpath" >&2
            rm -rf "$envpath"
        fi
        )

        (
        set -x
        conda-lock lock --micromamba --lockfile "$lockfile" --file "$mmbenv"
        # @XXX total joke, but conda-lock fails when passing a specific lockfile
        # path, so instead we move it to the default path :/
        if [[ -e "./conda-lock.yml" ]]; then
            bk "./conda-lock.yml"
        fi
        mv "$lockfile" "conda-lock.yml"
        cleanups="$cleanups;mv conda-lock.yml \"$lockfile\""
        conda-lock install --micromamba --name "$name"
        mv "conda-lock.yml" "$lockfile"
        )
        echo "! env: $name" >&2

        pass_no_args=1
        cleanups=""
    fi
    mmbenv=$name
fi

args=("$@")
eargs=()
for arg in "${args[@]}" ; do
    eargs+=("$(printf "%q" "$arg")")
done

if [[ $# -lt 1 ]]; then
    if [[ "$pass_no_args" ]]; then
        exit 0
    else
        die "pass at least one cmd"
    fi
fi
function join_array { local IFS="$1"; shift; echo "$*"; }

micromamba run -a stdin,stdout,stderr -n "$mmbenv" /bin/bash -c "$(join_array " " "${eargs[@]}")"
