#!/bin/bash
res=$1
shift

prefix() {
    local path=$1
    shift 

    local prefix=$1
    shift 

    local fext=$1
    shift 

    local fnamewext=$(basename -- "$path")
    local fbase="${path%/*}"
    local fname="${fnamewext%.*}"
    [[ $fext ]] || local fext="${fnamewext##*.}"

    echo "$fbase/$prefix$fname.$fext"
}

if [ "$res" == "720" ]; then
# 720
set -ex
in=$1; shift
ffmpeg \
	-i "$in" \
	-map 0             `#use all subtitles/audio/videos` \
	-vf "scale=-2:720" `#use height 720 and an aspect-ratio matching width as a multiple of 2` \
	-sws_flags lanczos+accurate_rnd `#use lanczos for downscaling instead of bicubic` \
    -pix_fmt yuv420p  `#dont use funky color-spaces` \
	-c:v libx264 -crf 20 -preset slow \
	-c:a aac -b:a 128k `#use 128kbs aac audio` \
	-ac 2              `#map audio to stereo` \
    $* \
    -y "$(prefix "$1" 720_ mp4)" 
elif [ "$res" == "480" ]; then
# 480
set -ex
in=$1; shift
ffmpeg \
	-i "$in" \
	-map 0             `#use all subtitles/audio/videos` \
	-vf "scale=-2:480" `#use height 720 and an aspect-ratio matching width as a multiple of 2` \
	-sws_flags lanczos+accurate_rnd `#use lanczos for downscaling instead of bicubic` \
	-c:v libx264 -crf 18 -preset slow \
	-c:a aac -b:a 128k `#use 128kbs aac audio` \
	-ac 2              `#map audio to stereo` \
    $* \
    -y "$(prefix "$1" 480_ mp4)" 
elif [ "$res" == "yt" ]; then
# yt
if [ "$#" == 1 ]; then
	set -ex
    in=$1; shift
	ffmpeg \
		-i "$in" \
		-filter_complex "[0:v]scale=640:-2:flags=lanczos+accurate_rnd" \
		-c:v libx264 -crf 20 -preset slow \
		-pix_fmt yuv420p  `#dont use funky color-spaces` \
		-c:a aac -b:a 64k `#use 64kbs aac audio` \
		-ac 1             `#map audio to mono` \
        -filter:a "loudnorm=I=-16:TP=-3:LRA=4" `# loudnorm` \
        $* \
		-y "yt_$(date +%s).mp4"
else
    in=$1; shift
	from=$1; shift
	to=$1; shift
	set -ex
	ffmpeg \
		-i "$in" \
		-filter_complex "[0:v]scale=640:-2:flags=lanczos+accurate_rnd" \
		-c:v libx264 -crf 20 -preset slow \
		-pix_fmt yuv420p  `#dont use funky color-spaces` \
		-c:a aac -b:a 64k `#use 64kbs aac audio` \
		-ac 1             `#map audio to mono` \
        -filter:a "loudnorm=I=-16:TP=-3:LRA=4" `# loudnorm` \
		-ss "$from" \
		-to "$to" \
        $* \
		-y "yt_$(date +%s).mp4"
fi;
else
    if [[ -f "$res" ]]; then
        set -ex
        ffmpeg \
            -i "$res" \
            -map 0             `#use all subtitles/audio/videos` \
            -c:v libx264 -crf 20 -preset slow \
            -c:a aac -b:a 128k `#use 128kbs aac audio` \
            -ac 2              `#map audio to stereo` \
            -filter:a "loudnorm=I=-16:TP=-3:LRA=4" `# loudnorm` \
            $* \
            -y "$(prefix "$res" smol_ mp4)" 

    else 
        echo "usage: (720|480 <video>)|(yt <video> <from> <to>)"
    fi
fi

#		-filter_complex "[0:v]scale=640:-2:flags=lanczos+accurate_rnd" \
#		-r 30             `#use 30fps` \
#	-filter_complex "[0:v]scale=640:-2:flags=lanczos+accurate_rnd[rv]; [rv]subtitles=$1" `#hardcode subtitles into video` \
#	-sn               `#strip subtitles` \

#	-sws_flags lanczos+accurate_rnd `#use lanczos for downscaling instead of bicubic` \
#	-vf scale=640:-2 \

# only process 5 minutes
#	-t 00:05:00        `#only process X minutes` \


#	-c:v copy \

#	-ss "$from" \
#	-to "$to" \
#	-c:a aac -b:a 64k -ac 1 \
#	-vf scale=720 \
