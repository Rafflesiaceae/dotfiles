#!/bin/bash
die() {
    printf '%s\n' "$1" >&2
    exit "${2-1}"
}

# @TODO check if is i3 floating window
# @TODO make i3-toggle-sticky

add_content() { read -r -d '' content || true; }
cat_wo_null_bytes() { sed 's/\x0/\t/g' < "$1"; }

clip_in()  { xclip -i -sel clip >/dev/null; }
clip_out() { xclip -o -sel clip </dev/null; }
clip_restore() { xclip -i -sel clip < /tmp/xclip_store >/dev/null; rm /tmp/xclip_store; }
clip_store()   { xclip -o -sel clip > /tmp/xclip_store </dev/null; }
xkey() { xdotool key --clearmodifiers --window "$win" "$@"; sleep 0.01; }

chromium_get_url() {
    [[ -z $win ]] && die "I assume a \$win global"
    clip_store
    cur=$(xdotool getactivewindow)
    xdotool windowfocus --sync "$win"
    xkey ctrl+l
    xkey ctrl+c
    xclip -o -sel clip
    clip_restore
    xdotool windowfocus --sync "$cur"
}

# {{{1 self-invocation
if [[ $# -eq 1 ]]; then
    case $1 in
        github-gists)
            win=$(xdotool getactivewindow)
            url=$chromium_url
            if [[ "$url" =~ ^[^\/]+\/\/github\.com\/([^\/]+) ]]; then
                username="${BASH_REMATCH[1]}"

                clip_store
                echo "https://gist.github.com/$username" | clip_in
                xkey ctrl+v
                sleep 0.1
                xkey Return
                clip_restore
            fi
            ;;
        jenkins-job-dsl)
            win=$(xdotool getactivewindow)
            url=$(chromium_get_url)
            if [[ "$url" =~ ^([^\/]+\/\/[^\/]+).*$ ]]; then
                url_prefix="${BASH_REMATCH[1]}"

                clip_store
                echo "${url_prefix}/plugin/job-dsl/api-viewer/index.html" | clip_in
                xkey ctrl+v
                xkey Return
                clip_restore
            fi
            ;;
        chromium_general_url)
            ;;
    esac
    exit 0
fi

# {{{1 ezautocompl
win=$X11_ACTIVEWINDOW
[[ -z $win ]] && die "did not find window in \$X11_ACTIVEWINDOW"

pid=$(xdotool getwindowpid "$X11_ACTIVEWINDOW") || die "failed to get window pid"
cmdline=$(cat_wo_null_bytes "/proc/$pid/cmdline") || die "couldnt read cmdline of pid $pid"
winname=$(xdotool getwindowname "$win")

add_content <<EOF
$content
EOF

# {{{1 [chromium
if [[ $cmdline == *chromium* ]]; then
    # {{{1 [chromium - youtube]
    if [[ $winname == *YouTube* ]]; then
        add_content <<EOF
$content
chrome open in youtube:
    cmd: i3-chrome-open-url-in-mpv
    copy-to-clipboard: false
EOF
    # {{{1 [chromium - jenkins]
    elif [[ $winname == *\[Jenkins\]* ]]; then
        add_content <<EOF
$content
jenkins job dsl:
    cmd: [bash, -c, "smart-context jenkins-job-dsl"]
    copy-to-clipboard: false
EOF
    # {{{1 [chromium - URL dependent]
    else
        export chromium_url=$(chromium_get_url)
        if [[ $chromium_url =~ .*\/\/github.com.* ]]; then
            add_content <<EOF
$content
gists:
    cmd: [bash, -c, "smart-context github-gists"]
    copy-to-clipboard: false
EOF
        fi
    fi
fi

# {{{1 mpv
if [[ $cmdline == mpv* ]]; then
    add_content <<EOF
$content
make sticky:
    cmd: [ i3-make-sticky, --nowait ]
    # cmd: i3-make-sticky
    copy-to-clipboard: false
EOF
fi

# {{{1 run
if [[ -z "$content" ]]; then
    notify-send --urgency=low "smart-context" "not available"
else
    echo "$content" | ezautocompl
fi
