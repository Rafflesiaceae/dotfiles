#!/bin/bash
die() {
    printf '%s\n' "$1" >&2
    exit "${2-1}"
}

cat_wo_null_bytes() { sed 's/\x0/\t/g' < "$1"; }
add_content() { read -r -d '' content || true; }

win=$X11_ACTIVEWINDOW
[[ -z $win ]] && die "did not find window in \$X11_ACTIVEWINDOW"

pid=$(xdotool getwindowpid "$X11_ACTIVEWINDOW") || die "failed to get window pid"
cmdline=$(cat_wo_null_bytes "/proc/$pid/cmdline") || die "couldnt read cmdline of pid $pid"
winname=$(xdotool getwindowname "$win")


add_content <<EOF
$content
EOF

if [[ $cmdline == *chromium* ]] && [[ $winname == *YouTube* ]]; then
    add_content <<EOF
$content
chrome open in youtube:
    cmd: i3-chrome-open-url-in-mpv
    copy-to-clipboard: false
EOF
fi

# @TODO check if is i3 floating window
# @TODO make i3-toggle-sticky

if [[ $cmdline == mpv* ]]; then
    add_content <<EOF
$content
make sticky:
    cmd: [ i3-make-sticky, --nowait ]
    # cmd: i3-make-sticky
    copy-to-clipboard: false
EOF
fi

echo "$content" | ezautocompl
# sleep 1

# Available commands:
#   getactivewindow
#   getwindowfocus
#   getwindowname
#   getwindowpid
#   getwindowgeometry
#   getdisplaygeometry
#   search
#   selectwindow
#   help
#   version
#   behave
#   behave_screen_edge
#   click
#   getmouselocation
#   key
#   keydown
#   keyup
#   mousedown
#   mousemove
#   mousemove_relative
#   mouseup
#   set_window
#   type
#   windowactivate
#   windowfocus
#   windowkill
#   windowclose
#   windowmap
#   windowminimize
#   windowmove
#   windowraise
#   windowreparent
#   windowsize
#   windowunmap
#   set_num_desktops
#   get_num_desktops
#   set_desktop
#   get_desktop
#   set_desktop_for_window
#   get_desktop_for_window
#   get_desktop_viewport
#   set_desktop_viewport
#   exec
#   sleep


