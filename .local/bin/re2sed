#!/usr/bin/env python3
# resed v0.1 (2021-07-13) (13543f5ba318cfa3)
# is a simple linter that explodes when you try to use unsupported
# regex pattern in your GNU sed (with the -r opt)
# 
# the assumption is you're pasting a regex you tried on regex101.com
# before / works with a common regex-engine
import sys

# see https://www.gnu.org/software/sed/manual/html_node/Character-Classes-and-Bracket-Expressions.html

def main(contents):
    warnings = []
    def warn(msg, index):
        warnings.append([f"[ERR] {msg}\n", index])

    # contents = sys.stdin.read()
    contents = contents.rstrip("\n")

    # find warnings/errors
    ps = None
    inside_bracket=0
    for i, s in enumerate(contents):
        if ps == "\\":
            if s == "s":
                if inside_bracket > 0:
                    warn(f"must not contain `\\s` inside brackets, use `[:space:]` instead", i-1)
            if s == "-":
                warn(f"must not contain `\\-`, use `-` instead", i-1)
        else:
            if s == "[":
                inside_bracket += 1
            elif s == "]":
                inside_bracket -= 1
            pass

        ps = s


    # print warnings/errors
    if len(warnings) > 0:
        msgs = []
        sys.stderr.write(contents+"\n")
        markline=[ " " for x in range(0,len(contents)) ]
        for warn in warnings:
            markline[warn[1]] = "^"
            msgs.append(warn[0])
        sys.stderr.write("".join(markline)+"\n")
        sys.stderr.write("\n"+"".join(set(msgs)))
        sys.exit(1)
    sys.stdout.write(contents+"\n")
    sys.exit(0)

if __name__ == "__main__":
    main(sys.argv[1])
